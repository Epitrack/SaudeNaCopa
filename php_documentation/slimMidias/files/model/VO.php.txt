<?php

/**
 * Class VO
 */

/**
 * VO: Classe abstrata de VO.
 *
 * @author      Rodrigo Carneiro <teoria@gmail.com>
 * @copyright   2014 Epitrack
 * @link        http://www.epitrack.com.br/
 * @version     2.4.2
 * @package     slimMidias
 * @subpackage  model
 */

class VO {


    /**
     * Lista de atributos requeridos na validação do objeto.
     * @var
     */
    protected $requires;

    /**
     * Método de criação do objeto.
     *
     * @param $data
     */
    function parse($data) {
        foreach ($data as $key => $value) {
            if( property_exists($this, $key ) ) {
                $this->$key = $value;
            }
        }
    }

    /**
     * Método de conversão de objeto para array.
     *
     * @return array
     */
    function parseArray() {
        $reflect = new ReflectionClass($this);
        $atributos = $reflect->getProperties();
        $array = array();
        foreach( $atributos as $attr ) {
            $nomeAtributo = $attr->name;
            $array[$nomeAtributo] = $this->$nomeAtributo;
        }
        return $array;
    }

    /**
     * Método de verifica se o objeto é válido.
     * @return bool
     */
    public function isValid(){

        for($i=0;$i<count($this->requires);$i++){
            $nome = $this->requires[$i];

            if(!isset($this->$nome)){
                return false;
            }
        }
        return true;
    }


} 
